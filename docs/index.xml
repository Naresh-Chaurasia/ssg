<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marcin Misiak on GitHub Pages</title>
    <link>https://zq-psk.github.io/ssg/</link>
    <description>Recent content on Marcin Misiak on GitHub Pages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://zq-psk.github.io/ssg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding articles</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/articles/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/articles/add/</guid>
      <description>Adding articles  In the project folder, open the content folder.
By default, the folder is content. The &amp;ldquo;book&amp;rdquo; theme uses the content/docs folder. Create a new Markdown file in the location where you want to add an article.
For more information on content organization, read this article. Open the new file with a text editor. At the beginning of the file, add the following metadata:  title (string) weight (integer) description (string) optional: other metadata that your site uses    Example:</description>
    </item>
    
    <item>
      <title>Git basics</title>
      <link>https://zq-psk.github.io/ssg/docs/github/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/github/git/</guid>
      <description>Git basics What is Git? Git is a distributed version control system. It is free, open source, and popular with software developers worldwide.
Git stores information about incremental changes, which means you can see and compare how a file changed over a long period of time, and control what is included in the production environment.
Git is a powerful and complex tool. This article covers only the most basic concepts needed to perform simple operations within your own repository.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/install/</guid>
      <description>Hugo Installation Hugo offers a few installation methods. A complete list is available in the Hugo documentation.
Installing Hugo on Ubuntu This method requires the most manual work, but it gives you strict control over the installed version. This is beneficial if you want to update Hugo at your own pace, giving yourself time to resolve any issues caused by the introduction of features that break backwards compatibility.
 Go to the Hugo releases page.</description>
    </item>
    
    <item>
      <title>Preparing for GitHub Pages deployment</title>
      <link>https://zq-psk.github.io/ssg/docs/deploy/prep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/deploy/prep/</guid>
      <description>Configuring Hugo for GitHub Pages deployment GitHub Pages requires some initial configuration from the static site generator.
 In the project folder, open the config.toml file. In the configuration file, search for the publishDir setting. Perform one of the following actions:  If the setting exists, change its value to &amp;quot;docs&amp;quot; If the setting does not exist, create it by adding the following line to the file: publishDir = &amp;quot;docs&amp;quot;   If the relativeURLs key exists and is set to true, set it to false.</description>
    </item>
    
    <item>
      <title>User authentication journey</title>
      <link>https://zq-psk.github.io/ssg/blog-sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/blog-sample/</guid>
      <description>User authentication and authorization Users who interact with your services need a way to secure their actions and ensure that no third party accesses their personal data without consent.
This can be achieved in a number of ways, and different levels of security can be applied to different kinds of operations.
Authentication and authorization are sometimes treated as synonyms. However, they are two very different concepts.
Authentication Answers the question who is that user?</description>
    </item>
    
    <item>
      <title>Content enrichment</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/articles/enrich/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/articles/enrich/</guid>
      <description>Content enrichment You can enrich your content by using shortcodes or inserting HTML into the Markdown file.
Shortcodes Hugo offers a number of built-in shortcodes. Themes usually add additional shortcodes you can use. You can also create your own.
Shortcodes are processed when the Markdown sources are parsed into HTML.
A full list of the built-in shortcodes is available in the Hugo documentation.
The shortcodes added by a theme are usually described in the theme&amp;rsquo;s README.</description>
    </item>
    
    <item>
      <title>Deploying the site</title>
      <link>https://zq-psk.github.io/ssg/docs/deploy/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/deploy/deploy/</guid>
      <description>Site deployment Building the site To publish your content, you must first build a static site from the source files.
 If any changes you want to publish are in a working branch, merge that branch into the master branch. In the file explorer, open the project folder. Right-click in the file explorer (not on any file or folder) and select Open in Terminal. Check out the master branch by entering git checkout master.</description>
    </item>
    
    <item>
      <title>GitHub account</title>
      <link>https://zq-psk.github.io/ssg/docs/github/account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/github/account/</guid>
      <description>GitHub account Creating a GitHub account A free GitHub account lets you access the basic features needed to deploy a personal site.
 Go to https://github.com/. Fill in the following fields:  Username Email Password   Click Sign up for GitHub. In the page that opens, perform the following actions:  Click Verify.
A puzzle appears. Solve the puzzle according to the instructions on the screen. Click Join a free plan.</description>
    </item>
    
    <item>
      <title>Initializing a site</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/initialize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/initialize/</guid>
      <description>Initializing a site Before you can add styling and content to a site, you must initialize a folder structure and configuration files.
 In the file explorer, create a folder for your project.
NOTE: Whenever this page mentions project folder, it refers to this folder - until your local repository folder assumes the role of the project folder, as described in the GitHub section. Open the Terminal by pressing CTRL + ALT + T.</description>
    </item>
    
    <item>
      <title>GitHub repository</title>
      <link>https://zq-psk.github.io/ssg/docs/github/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/github/repository/</guid>
      <description>GitHub repository After your content is uploaded to a GitHub repository, you can start versioning your source files and keeping a history of changes.
Before you continue, ensure that you installed Git.
Creating a repository  Log in to GitHub. In the menu on the left, click New. In the Repository name field, enter a meaningful name.
NOTE: If you host a project site from this repository, the name is part of the URL.</description>
    </item>
    
    <item>
      <title>Reviewing the output</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/articles/review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/articles/review/</guid>
      <description>Reviewing the output Before publishing your site to GitHub Pages, you should review the output locally. GitHub Pages do not provide an on-line staging environment and the static site pushed to &amp;ldquo;origin/master&amp;rdquo; is published immediately.
Hosting the preview  Open the Terminal by pressing CTRL + ALT + T. Navigate to the project folder. Enter hugo server.
Result: The site is hosted locally on your system.
By default, the site is available at http://localhost:1313/.</description>
    </item>
    
    <item>
      <title>Themes</title>
      <link>https://zq-psk.github.io/ssg/docs/hugo/themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/hugo/themes/</guid>
      <description>Themes To give your website a graphical layout, you must add a theme.
You can also create your own theme from scratch. This requires knowledge of HTML, CSS, JS, and Hugo templating.
Adding a theme This procedure explains how to download a theme and use it without connection to the theme&amp;rsquo;s original repository. This allows you to easily introduce your own modifications or update the theme at your own pace.</description>
    </item>
    
    <item>
      <title>Troubleshooting GitHub Pages</title>
      <link>https://zq-psk.github.io/ssg/docs/deploy/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zq-psk.github.io/ssg/docs/deploy/troubleshooting/</guid>
      <description>Troubleshooting GitHub Pages This is a list of issues which I encountered when deploying this site to GitHub pages.
The solutions may not be the most effective or the only possible ones.
Problem: styling is not applied to the site Solution:
Verify that your config file includes these lines:
canonifyURLs = truebaseURL = &amp;quot;https://{your GitHub username}.github.io/{your repository name}/&amp;quot;Problem: relative links to articles do not work Solution:
Verify that your config file includes these lines:</description>
    </item>
    
  </channel>
</rss>