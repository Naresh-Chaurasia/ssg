<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on GitHub Pages</title>
    <link>/</link>
    <description>Recent content on Hugo on GitHub Pages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding articles</title>
      <link>/docs/hugo/articles/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/hugo/articles/add/</guid>
      <description>Adding articles  Open the content/docs folder. Create a new Markdown file.
The name of the file will be visible in the URL of the article. Open the new file with a text editor. At the beginning of the file, add the following metadata:  title (string) weight (integer) description (string) optional: other metadata that your site uses    Example:
--- title: &amp;quot;Content&amp;quot; weight: 20 description: &amp;quot;Short description&amp;quot; customParam: &amp;quot;string&amp;quot; customArrayParam: - &amp;quot;string&amp;quot; - &amp;quot;string&amp;quot; --- After the metadata block, add the Markdown content.</description>
    </item>
    
    <item>
      <title>Git basics</title>
      <link>/docs/github/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/github/git/</guid>
      <description>Git basics Installing git  Open the Terminal by pressing CTRL + ALT + T. Check if git is installed by entering git --version Perform one of the following actions:  If the output displays a version number, no further actions are required. If the output say the git command was not found, install git by performing the following actions:  Enter sudo apt install git. If prompted, enter the password.</description>
    </item>
    
    <item>
      <title>Installing Hugo</title>
      <link>/docs/hugo/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/hugo/install/</guid>
      <description>Installing Hugo on Ubuntu Hugo offers a few installation methods. The method described in this procedure lets you control the version you are installing and installs it globally.
 Go to the Hugo releases page. Choose a release :  If you are preparing to create a new site, choose the latest release. If you are going to work with an existing site, on the list locate the same release that the site is deployed with.</description>
    </item>
    
    <item>
      <title>Preparing for GitHub Pages deployment</title>
      <link>/docs/deploy/prep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/deploy/prep/</guid>
      <description>Configuring Hugo for GitHub Pages deployment  In the root folder of your repository, open the config.toml file. In the configuration file, search for the publishDir setting. Perform one of the following actions:  If the setting exists, change its value to &amp;quot;docs&amp;quot; If the setting does not exist, create it by adding the following line to the file: publishDir = &amp;quot;docs&amp;quot;   Add the following line: relativeURLs = true</description>
    </item>
    
    <item>
      <title>Deploying the site</title>
      <link>/docs/deploy/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/deploy/deploy/</guid>
      <description>Site deployment Building the site  In the file explorer, open the root folder of your repository. If the docs folder exists, delete it.
IMPORTANT: This does not apply to the content/docs/ folder. Right-click Enter hugo
Result: The static site is built in the docs directory. Commit the changes in the docs directory. Perform one of the following actions:  If you are working on the &amp;ldquo;master&amp;rdquo; branch, push to &amp;ldquo;origin/master&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>GitHub account</title>
      <link>/docs/github/account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/github/account/</guid>
      <description>GitHub account Creating a GitHub account A free GitHub account lets you access the basic features.
 Go to https://github.com/. Fill in the following fields:  Username Email Password   Click Sign up for GitHub. In the page that opens, perform the following actions:  Click Verify.
A puzzle appears. Solve the puzzle according to the instructions on the screen. Click Join a free plan. Result: A page opens, asking for more information about your work profile.</description>
    </item>
    
    <item>
      <title>Initializing a site</title>
      <link>/docs/hugo/initialize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/hugo/initialize/</guid>
      <description>Initializing a site  Open the Terminal by pressing CTRL + ALT + T. Navigate to the parent directory of your repository.
Example  marcin@marcin-HP:~$ cd Documents/gitRepositories Verify that the repository catalog exists.
Example  marcin@marcin-HP:~/Documents/gitRepositories$ ls myRepository  Enter hugo new site {repository dir}
Example: hugo new site myRepository Result: An empty site is created. To serve the site on your machine, perform the following steps:  Enter cd {repository dir} Enter hugo server Result: By default, the site is available at http://localhost:1313/.</description>
    </item>
    
    <item>
      <title>Themes</title>
      <link>/docs/hugo/themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/hugo/themes/</guid>
      <description>Themes Adding a theme To give your website a layout, you must add a theme. The procedure explains how to download a theme and make it a part of your repository, so you can make modifications without affecting the original theme.
 Go to the Hugo themes site. Browse the list of themes.
This page uses the book theme. Go the GitHub page of the theme&amp;rsquo;s repository. Click Clone or download.</description>
    </item>
    
    <item>
      <title>GitHub repository</title>
      <link>/docs/github/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/github/repository/</guid>
      <description>GitHub repository Creating a repository  Log in to GitHub. In the menu on the left, click New. In the Repository name field, enter a meaningful name.
NOTE: If you host a project site from this repository, the name is part of the URL. Optional: In the Description field, enter a description. Make the repository public or private by selecting the corresponding radio button. Click Create repository.
Result An empty repository is created.</description>
    </item>
    
    <item>
      <title>Reviewing the output</title>
      <link>/docs/hugo/articles/review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/hugo/articles/review/</guid>
      <description>Reviewing the output. Before publishing your site to GitHub Pages, you should review the output locally. GitHub Pages do not provide an on-line staging environment and the static site pushed to &amp;ldquo;origin/master&amp;rdquo; is published immediately.
Hosting the preview  Open the Terminal by pressing CTRL + ALT + T. Navigate to the root folder of your repository. Enter hugo server.
Result: The site is hosted locally on your system. By default, the site is available at http://localhost:1313/.</description>
    </item>
    
    <item>
      <title>VS Codium</title>
      <link>/docs/vscodium/vsc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/vscodium/vsc/</guid>
      <description>VS Codium Installing VS Codium on Ubuntu  Open the Ubuntu Software application.
By default, the application is available from the application bar on the left side of the screen. In the upper-left corner of the application window, click the search icon. In the search field that opens, enter VS Codium In the results, click VS Codium. In the application details that open, click Install. In the pop-up that opens, enter your user password and press ENTER.</description>
    </item>
    
  </channel>
</rss>